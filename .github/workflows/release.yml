name: Build & Publish (Win/Mac/Linux)

on:
push:
    tags:
      - 'v*'
workflow_dispatch:

jobs:
build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache Electron caches (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\electron\Cache
            ~\AppData\Local\electron-builder\Cache
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('package-lock.json') }}

      - name: Cache Electron caches (macOS/Linux)
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('package-lock.json') }}

      - name: Sync version with tag
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"
          if [[ "$TAG" =~ ^v?([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            VER="${BASH_REMATCH[1]}"
            node -e "const fs=require('fs');const p=require('./
package.json');p.version='${VER}';fs.writeFileSync('package.json',JSON.stringify(p,null,2));console.log('version',p.version)"
          else
            echo "Tag not semver vX.Y.Z; skipping version sync"
          fi

      - name: Install dependencies
        run: npm ci

      - name: Build web
        run: npm run build:web

      - name: Build and publish (Windows)
        if: runner.os == 'Windows'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Optional live data during CI:
          # VITE_POLYGON_KEY: ${{ secrets.VITE_POLYGON_KEY }}
        run: npx electron-builder -w --publish always -c.extraMetadata.main=electron/main.cjs

      - name: Build and publish (macOS)
        if: runner.os == 'macOS'
        env:
          # VITE_POLYGON_KEY: ${{ secrets.VITE_POLYGON_KEY }}
        run: npx electron-builder -m --publish always -c.extraMetadata.main=electron/main.cjs

      - name: Build and publish (Linux)
        if: runner.os == 'Linux'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # VITE_POLYGON_KEY: ${{ secrets.VITE_POLYGON_KEY }}
        run: npx electron-builder -l --publish always -c.extraMetadata.main=electron/main.cjs

      - name: Upload dist artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: dist/**
          if-no-files-found: warn
