name: Build & Release App

on:
  push:
    tags: ['v*.*.*']   # e.g. v0.1.9
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          # ðŸ‘‡ map each OS to the npm script that builds that installer
          - os: windows-latest
            build_cmd: npm run build:win      # or: npm run build:win:unsigned
            artifact_glob: dist/*.{exe,msi}
          - os: macos-latest
            build_cmd: npm run build:mac
            artifact_glob: dist/*.{dmg,zip,pkg}
          - os: ubuntu-latest
            build_cmd: npm run build:linux
            artifact_glob: dist/*.{AppImage,deb,rpm,tar.gz}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build (${{ matrix.os }})
        run: ${{ matrix.build_cmd }}

      - name: Upload artifact (${{ matrix.os }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-installer
          path: ${{ matrix.artifact_glob }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/artifacts

      - name: Create GitHub Release & attach files
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ runner.temp }}/artifacts/**/*  # <- note the ${{ }} syntax 
